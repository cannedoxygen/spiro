{"ast":null,"code":"var _jsxFileName = \"/Users/cannedoxygen/Downloads/spiro/src/components/WalletConnect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport '../styles/components.css';\n\n// ERC-721 token contract ABI (minimal for balance checking)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_ABI = [\n// balanceOf function to check token ownership\n\"function balanceOf(address owner) view returns (uint256)\",\n// name function to get token name\n\"function name() view returns (string)\",\n// symbol function to get token symbol\n\"function symbol() view returns (string)\"];\n\n// Replace with your actual token contract address on Base network\nconst TOKEN_CONTRACT_ADDRESS = \"0x0000000000000000000000000000000000000000\"; // REPLACE WITH REAL ADDRESS\n\nconst WalletConnect = ({\n  onConnect\n}) => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [hasToken, setHasToken] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [tokenInfo, setTokenInfo] = useState(null);\n\n  // Check if MetaMask is installed and if we're already connected\n  const checkIfWalletIsConnected = async () => {\n    try {\n      // Check if ethereum object exists (MetaMask or other EIP-1193 provider)\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        setError(\"MetaMask not found. Please install it to use this app.\");\n        console.error('MetaMask not found!');\n        return;\n      }\n      console.log('Ethereum object found:', ethereum);\n\n      // Check if we're already connected\n      const accounts = await ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Found an authorized account:', account);\n        setWalletAddress(account);\n        await checkNetwork();\n        await checkTokenOwnership(account);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n      setError(\"Error connecting to wallet\");\n    }\n  };\n\n  // Check if we're on the correct network (Base)\n  const checkNetwork = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      // Base Mainnet Chain ID is 8453\n      // Base Testnet Chain ID is 84531\n      const baseChainId = \"0x2105\"; // Hex for 8453 (Base Mainnet)\n\n      const chainId = await ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log(\"Current Chain ID:\", chainId);\n      if (chainId !== baseChainId) {\n        // Prompt user to switch to Base\n        try {\n          await ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: baseChainId\n            }]\n          });\n        } catch (switchError) {\n          // This error code indicates that the chain has not been added to MetaMask\n          if (switchError.code === 4902) {\n            try {\n              await ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: baseChainId,\n                  chainName: 'Base',\n                  nativeCurrency: {\n                    name: 'ETH',\n                    symbol: 'ETH',\n                    decimals: 18\n                  },\n                  rpcUrls: ['https://mainnet.base.org'],\n                  blockExplorerUrls: ['https://basescan.org']\n                }]\n              });\n            } catch (addError) {\n              console.error('Error adding Base network:', addError);\n              setError(\"Failed to add Base network to MetaMask\");\n            }\n          } else {\n            console.error('Error switching to Base network:', switchError);\n            setError(\"Failed to switch to Base network\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error checking network:', error);\n    }\n  };\n\n  // Connect to wallet\n  const connectWallet = async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        setError(\"MetaMask not found. Please install it to use this app.\");\n        setIsConnecting(false);\n        return;\n      }\n\n      // Request account access\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Connected to account:', account);\n        setWalletAddress(account);\n\n        // Check if we're on the right network\n        await checkNetwork();\n\n        // Check token ownership\n        await checkTokenOwnership(account);\n      }\n    } catch (error) {\n      console.error('Error connecting to wallet:', error);\n      setError(\"Failed to connect wallet\");\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = async () => {\n    try {\n      setWalletAddress(null);\n      setHasToken(false);\n      setTokenInfo(null);\n      onConnect(null, false);\n    } catch (error) {\n      console.error('Error disconnecting wallet:', error);\n    }\n  };\n\n  // Check if user owns required token\n  const checkTokenOwnership = async address => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) return false;\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const tokenContract = new ethers.Contract(TOKEN_CONTRACT_ADDRESS, TOKEN_ABI, provider);\n\n      // Get token info\n      const name = await tokenContract.name();\n      const symbol = await tokenContract.symbol();\n      setTokenInfo({\n        name,\n        symbol\n      });\n\n      // Check token balance\n      const balance = await tokenContract.balanceOf(address);\n      const ownsToken = balance.gt(0); // Greater than 0\n\n      console.log(`Token ownership for ${address}: ${ownsToken ? 'Yes' : 'No'} (${balance.toString()} tokens)`);\n      setHasToken(ownsToken);\n\n      // Notify parent component\n      onConnect(address, ownsToken);\n      return ownsToken;\n    } catch (error) {\n      console.error('Error checking token ownership:', error);\n      setHasToken(false);\n      onConnect(address, false);\n      return false;\n    }\n  };\n\n  // Check wallet connection on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Format wallet address for display\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connect\",\n    children: [!walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      disabled: isConnecting,\n      children: isConnecting ? 'Connecting...' : 'Connect MetaMask'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"address-label\",\n          children: \"Connected:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"address-value\",\n          children: formatAddress(walletAddress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), hasToken && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"token-badge\",\n          children: \"\\u2713 Token Verified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disconnect-button\",\n        onClick: disconnectWallet,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this), walletAddress && !hasToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"token-warning\",\n      children: [\"You need the gate token to mint NFTs for free.\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://opensea.io/collection/spyro-access-token\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"get-token-link\",\n        children: \"Get Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"zWk1U0SGRNpCztUYRsNE+W88nX4=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","TOKEN_ABI","TOKEN_CONTRACT_ADDRESS","WalletConnect","onConnect","_s","walletAddress","setWalletAddress","hasToken","setHasToken","isConnecting","setIsConnecting","error","setError","tokenInfo","setTokenInfo","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","checkNetwork","checkTokenOwnership","baseChainId","chainId","params","switchError","code","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","addError","connectWallet","disconnectWallet","address","provider","providers","Web3Provider","tokenContract","Contract","balance","balanceOf","ownsToken","gt","toString","formatAddress","substring","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/cannedoxygen/Downloads/spiro/src/components/WalletConnect.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport '../styles/components.css';\n\n// ERC-721 token contract ABI (minimal for balance checking)\nconst TOKEN_ABI = [\n  // balanceOf function to check token ownership\n  \"function balanceOf(address owner) view returns (uint256)\",\n  // name function to get token name\n  \"function name() view returns (string)\",\n  // symbol function to get token symbol\n  \"function symbol() view returns (string)\"\n];\n\n// Replace with your actual token contract address on Base network\nconst TOKEN_CONTRACT_ADDRESS = \"0x0000000000000000000000000000000000000000\"; // REPLACE WITH REAL ADDRESS\n\nconst WalletConnect = ({ onConnect }) => {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [hasToken, setHasToken] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [tokenInfo, setTokenInfo] = useState(null);\n\n  // Check if MetaMask is installed and if we're already connected\n  const checkIfWalletIsConnected = async () => {\n    try {\n      // Check if ethereum object exists (MetaMask or other EIP-1193 provider)\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        setError(\"MetaMask not found. Please install it to use this app.\");\n        console.error('MetaMask not found!');\n        return;\n      }\n      \n      console.log('Ethereum object found:', ethereum);\n      \n      // Check if we're already connected\n      const accounts = await ethereum.request({ method: 'eth_accounts' });\n      \n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Found an authorized account:', account);\n        setWalletAddress(account);\n        await checkNetwork();\n        await checkTokenOwnership(account);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n      setError(\"Error connecting to wallet\");\n    }\n  };\n\n  // Check if we're on the correct network (Base)\n  const checkNetwork = async () => {\n    try {\n      const { ethereum } = window;\n      \n      // Base Mainnet Chain ID is 8453\n      // Base Testnet Chain ID is 84531\n      const baseChainId = \"0x2105\"; // Hex for 8453 (Base Mainnet)\n      \n      const chainId = await ethereum.request({ method: 'eth_chainId' });\n      console.log(\"Current Chain ID:\", chainId);\n      \n      if (chainId !== baseChainId) {\n        // Prompt user to switch to Base\n        try {\n          await ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: baseChainId }],\n          });\n        } catch (switchError) {\n          // This error code indicates that the chain has not been added to MetaMask\n          if (switchError.code === 4902) {\n            try {\n              await ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: baseChainId,\n                  chainName: 'Base',\n                  nativeCurrency: {\n                    name: 'ETH',\n                    symbol: 'ETH',\n                    decimals: 18\n                  },\n                  rpcUrls: ['https://mainnet.base.org'],\n                  blockExplorerUrls: ['https://basescan.org']\n                }],\n              });\n            } catch (addError) {\n              console.error('Error adding Base network:', addError);\n              setError(\"Failed to add Base network to MetaMask\");\n            }\n          } else {\n            console.error('Error switching to Base network:', switchError);\n            setError(\"Failed to switch to Base network\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error checking network:', error);\n    }\n  };\n\n  // Connect to wallet\n  const connectWallet = async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n      \n      const { ethereum } = window;\n      \n      if (!ethereum) {\n        setError(\"MetaMask not found. Please install it to use this app.\");\n        setIsConnecting(false);\n        return;\n      }\n      \n      // Request account access\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      \n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Connected to account:', account);\n        setWalletAddress(account);\n        \n        // Check if we're on the right network\n        await checkNetwork();\n        \n        // Check token ownership\n        await checkTokenOwnership(account);\n      }\n    } catch (error) {\n      console.error('Error connecting to wallet:', error);\n      setError(\"Failed to connect wallet\");\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = async () => {\n    try {\n      setWalletAddress(null);\n      setHasToken(false);\n      setTokenInfo(null);\n      onConnect(null, false);\n    } catch (error) {\n      console.error('Error disconnecting wallet:', error);\n    }\n  };\n\n  // Check if user owns required token\n  const checkTokenOwnership = async (address) => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) return false;\n\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const tokenContract = new ethers.Contract(\n        TOKEN_CONTRACT_ADDRESS,\n        TOKEN_ABI,\n        provider\n      );\n      \n      // Get token info\n      const name = await tokenContract.name();\n      const symbol = await tokenContract.symbol();\n      setTokenInfo({ name, symbol });\n      \n      // Check token balance\n      const balance = await tokenContract.balanceOf(address);\n      const ownsToken = balance.gt(0); // Greater than 0\n      \n      console.log(`Token ownership for ${address}: ${ownsToken ? 'Yes' : 'No'} (${balance.toString()} tokens)`);\n      setHasToken(ownsToken);\n      \n      // Notify parent component\n      onConnect(address, ownsToken);\n      \n      return ownsToken;\n    } catch (error) {\n      console.error('Error checking token ownership:', error);\n      setHasToken(false);\n      onConnect(address, false);\n      return false;\n    }\n  };\n\n  // Check wallet connection on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Format wallet address for display\n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  return (\n    <div className=\"wallet-connect\">\n      {!walletAddress ? (\n        <button \n          className=\"connect-button\"\n          onClick={connectWallet}\n          disabled={isConnecting}\n        >\n          {isConnecting ? 'Connecting...' : 'Connect MetaMask'}\n        </button>\n      ) : (\n        <div className=\"wallet-info\">\n          <div className=\"address-display\">\n            <span className=\"address-label\">Connected:</span>\n            <span className=\"address-value\">{formatAddress(walletAddress)}</span>\n            {hasToken && <span className=\"token-badge\">✓ Token Verified</span>}\n          </div>\n          <button \n            className=\"disconnect-button\"\n            onClick={disconnectWallet}\n          >\n            Disconnect\n          </button>\n        </div>\n      )}\n      \n      {error && <div className=\"wallet-error\">{error}</div>}\n      \n      {walletAddress && !hasToken && (\n        <div className=\"token-warning\">\n          You need the gate token to mint NFTs for free.\n          <a href=\"https://opensea.io/collection/spyro-access-token\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"get-token-link\">Get Token</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WalletConnect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}