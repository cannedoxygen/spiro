{"ast":null,"code":"var _jsxFileName = \"/Users/cannedoxygen/Downloads/spiro/src/pages/Create.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WalletConnect from '../components/WalletConnect';\nimport SpirographCanvas from '../components/SpirographCanvas';\nimport { isSeedAvailable, reserveSeed, getMintedCount, findAvailableSeed, saveUserNFT } from '../services/nftService';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  // Spirograph state\n  const [seed, setSeed] = useState(null);\n  const [shape, setShape] = useState(null);\n  const [palette, setPalette] = useState(null);\n  const [image, setImage] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n\n  // NFT and wallet state\n  const [isMinting, setIsMinting] = useState(false);\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [hasToken, setHasToken] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [mintStatus, setMintStatus] = useState(null);\n  const [mintedCount, setMintedCount] = useState(0);\n  const [availabilityMessage, setAvailabilityMessage] = useState('');\n  const [isSeedAvailableState, setIsSeedAvailableState] = useState(true);\n\n  // Check NFT availability on load\n  useEffect(() => {\n    const fetchMintedCount = async () => {\n      try {\n        const count = await getMintedCount();\n        setMintedCount(count);\n      } catch (error) {\n        console.error(\"Error fetching minted count:\", error);\n        setMintedCount(0);\n      }\n    };\n    fetchMintedCount();\n    handleGenerateNew();\n  }, []);\n\n  // Check seed availability when it changes\n  useEffect(() => {\n    if (seed) {\n      const checkSeedAvailability = async () => {\n        try {\n          const available = await isSeedAvailable(seed);\n          setIsSeedAvailableState(available);\n          if (!available) {\n            setAvailabilityMessage('This design has already been minted! Generate a new one.');\n          } else {\n            setAvailabilityMessage('');\n          }\n        } catch (error) {\n          console.error(\"Error checking seed availability:\", error);\n          setIsSeedAvailableState(true);\n          setAvailabilityMessage('');\n        }\n      };\n      checkSeedAvailability();\n    }\n  }, [seed]);\n\n  // Handle wallet connection\n  const handleWalletConnect = (address, tokenOwnership) => {\n    setWalletAddress(address);\n    setIsWalletConnected(!!address);\n    setHasToken(tokenOwnership);\n  };\n\n  // Handle shape change\n  const handleShapeChange = shapeData => {\n    setShape(shapeData);\n  };\n\n  // Handle palette change\n  const handlePaletteChange = paletteData => {\n    setPalette(paletteData);\n  };\n\n  // Handle drawing completion\n  const handleDrawingComplete = finalImage => {\n    setImage(finalImage);\n    setShowPreview(true);\n  };\n\n  // Generate a new random design\n  const handleGenerateNew = async () => {\n    // Clear previous state\n    setImage(null);\n    setShowPreview(false);\n    setMintStatus(null);\n    setAvailabilityMessage('');\n    try {\n      // Find an available seed\n      const newSeed = await findAvailableSeed();\n      if (newSeed) {\n        setSeed(newSeed);\n      } else {\n        setAvailabilityMessage('All 10,000 designs have been minted!');\n      }\n    } catch (error) {\n      console.error(\"Error finding available seed:\", error);\n      // Fallback to a random seed (1-10000) if there's an error\n      setSeed(Math.floor(Math.random() * 10000) + 1);\n    }\n  };\n\n  // Mint the current design as an NFT\n  const handleMint = async () => {\n    // Can't mint without wallet or token\n    if (!isWalletConnected) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    if (!hasToken) {\n      alert(\"You need the special token to mint for free!\");\n      return;\n    }\n\n    // Ensure we have a completed drawing\n    if (!image) {\n      alert(\"Please wait for the drawing to complete before minting.\");\n      return;\n    }\n\n    // Check availability once more before minting\n    try {\n      const available = await isSeedAvailable(seed);\n      if (!available) {\n        setAvailabilityMessage('This design has already been minted! Generate a new one.');\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error checking seed availability:\", error);\n    }\n    try {\n      var _shape$params, _shape$params2, _shape$params3;\n      setIsMinting(true);\n      setMintStatus(null);\n\n      // Reserve the seed\n      const reservationResult = await reserveSeed(seed);\n      if (!reservationResult.success) {\n        throw new Error(reservationResult.message);\n      }\n\n      // In a real implementation, this would upload to IPFS and mint an NFT\n      console.log(\"Minting with parameters:\", {\n        seed,\n        shape: shape === null || shape === void 0 ? void 0 : shape.type,\n        rarity: shape === null || shape === void 0 ? void 0 : shape.rarity,\n        palette: palette === null || palette === void 0 ? void 0 : palette.name,\n        animated: true\n      });\n\n      // Simulate minting process\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Success!\n      setMintStatus('success');\n\n      // Update minted count\n      try {\n        const count = await getMintedCount();\n        setMintedCount(count);\n      } catch (error) {\n        console.error(\"Error fetching minted count:\", error);\n      }\n\n      // Store in local storage for collection page\n      const imageUrl = image && image.canvas ? image.canvas.toDataURL('image/png') : null;\n      await saveUserNFT({\n        id: seed,\n        params: {\n          shape: shape === null || shape === void 0 ? void 0 : shape.type,\n          rarity: shape === null || shape === void 0 ? void 0 : shape.rarity,\n          fixedRadius: shape === null || shape === void 0 ? void 0 : (_shape$params = shape.params) === null || _shape$params === void 0 ? void 0 : _shape$params.R,\n          movingRadius: shape === null || shape === void 0 ? void 0 : (_shape$params2 = shape.params) === null || _shape$params2 === void 0 ? void 0 : _shape$params2.r1,\n          offset: shape === null || shape === void 0 ? void 0 : (_shape$params3 = shape.params) === null || _shape$params3 === void 0 ? void 0 : _shape$params3.d,\n          colors: palette === null || palette === void 0 ? void 0 : palette.colors,\n          strokeWeight: 1\n        },\n        imageUrl: imageUrl,\n        animatedGifUrl: imageUrl,\n        mintDate: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error(\"Error minting NFT:\", error);\n      setMintStatus('error');\n      setAvailabilityMessage(error.message || 'Error minting NFT');\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  // Download the current image\n  const handleDownloadImage = () => {\n    if (image && image.canvas) {\n      const link = document.createElement('a');\n      link.href = image.canvas.toDataURL('image/png');\n      link.download = `Spyro_${seed}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Your Spyro NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Design your unique mathematical pattern and mint it as an animated NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-availability\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minted-count\",\n          children: [mintedCount, \"/10,000 Minted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WalletConnect, {\n          onConnect: handleWalletConnect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spiro-info\",\n          children: seed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spiro-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Spyro #\", seed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), shape && palette && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spiro-properties\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shape-badge\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prop-icon\",\n                  children: \"\\uD83C\\uDF1F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), \" \", shape.type, \" \\xB7 \", shape.rarity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"palette-badge\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prop-icon\",\n                  children: \"\\uD83C\\uDFA8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), \" \", palette.name, \" \\xB7 \", palette.rarity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), availabilityMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"availability-message\",\n              children: availabilityMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-container\",\n          children: !showPreview ? /*#__PURE__*/_jsxDEV(SpirographCanvas, {\n            seed: seed,\n            setSeed: setSeed,\n            onShapeChange: handleShapeChange,\n            onPaletteChange: handlePaletteChange,\n            onDrawingComplete: handleDrawingComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animation-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rotating-image\",\n                children: image && image.canvas && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image.canvas.toDataURL('image/png'),\n                  alt: \"Animated Spirograph\",\n                  className: \"preview-gif\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button generate-button\",\n            onClick: handleGenerateNew,\n            disabled: isMinting,\n            children: \"Generate New Design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), showPreview && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownloadImage,\n              className: \"action-button download-button\",\n              children: \"Download Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMint,\n              className: \"action-button mint-button\",\n              disabled: isMinting || !isSeedAvailableState,\n              children: isMinting ? 'Minting...' : 'Mint as NFT'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), mintStatus === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Success! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Spyro NFT has been minted and sent to your wallet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"share-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"share-twitter\",\n              children: \"Share on X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"share-copy\",\n              children: \"Copy Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), mintStatus === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Error Minting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There was a problem creating your NFT. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMintStatus(null),\n            className: \"try-again-button\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-gate-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Token Gate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is a token-gated experience. You need to own our special token to mint NFTs for free.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), !isWalletConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect your wallet to check if you have the token.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), isWalletConnected && !hasToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You don't have the required token yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://opensea.io/collection/spyro-access-token\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"get-token-button\",\n              children: \"Get Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), isWalletConnected && hasToken && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token-success\",\n            children: \"You have the token! Mint as many NFTs as you want.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rarity-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rarity Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rarity-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rarity-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-type common\",\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-percent\",\n                children: \"40%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rarity-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-type uncommon\",\n                children: \"Uncommon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-percent\",\n                children: \"30%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rarity-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-type rare\",\n                children: \"Rare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-percent\",\n                children: \"20%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rarity-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-type super-rare\",\n                children: \"Super Rare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-percent\",\n                children: \"8%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rarity-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-type legendary\",\n                children: \"Legendary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rarity-percent\",\n                children: \"2%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rarity-tip\",\n            children: \"The rarer your Spyro, the higher the token rewards after 90 days!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shape Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"features-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Rhodonea:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), \" Rose-like curves with symmetric petals\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Epitrochoid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), \" Curves traced by a point on a circle rolling around the outside of another circle\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Hypotrochoid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), \" Curves traced by a point on a circle rolling inside another circle\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"OrganicFlow:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), \" Dynamic patterns with natural, flowing variations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Lissajous:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), \" Complex patterns created by two perpendicular oscillations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"0JsfDcjzZOTTICf+ZmPY+hwHpjk=\");\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useEffect","WalletConnect","SpirographCanvas","isSeedAvailable","reserveSeed","getMintedCount","findAvailableSeed","saveUserNFT","jsxDEV","_jsxDEV","Fragment","_Fragment","Create","_s","seed","setSeed","shape","setShape","palette","setPalette","image","setImage","showPreview","setShowPreview","isMinting","setIsMinting","isWalletConnected","setIsWalletConnected","hasToken","setHasToken","walletAddress","setWalletAddress","mintStatus","setMintStatus","mintedCount","setMintedCount","availabilityMessage","setAvailabilityMessage","isSeedAvailableState","setIsSeedAvailableState","fetchMintedCount","count","error","console","handleGenerateNew","checkSeedAvailability","available","handleWalletConnect","address","tokenOwnership","handleShapeChange","shapeData","handlePaletteChange","paletteData","handleDrawingComplete","finalImage","newSeed","Math","floor","random","handleMint","alert","_shape$params","_shape$params2","_shape$params3","reservationResult","success","Error","message","log","type","rarity","name","animated","Promise","resolve","setTimeout","imageUrl","canvas","toDataURL","id","params","fixedRadius","R","movingRadius","r1","offset","d","colors","strokeWeight","animatedGifUrl","mintDate","Date","toISOString","handleDownloadImage","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnect","onShapeChange","onPaletteChange","onDrawingComplete","src","alt","onClick","disabled","target","rel","_c","$RefreshReg$"],"sources":["/Users/cannedoxygen/Downloads/spiro/src/pages/Create.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WalletConnect from '../components/WalletConnect';\nimport SpirographCanvas from '../components/SpirographCanvas';\nimport { \n  isSeedAvailable, \n  reserveSeed, \n  getMintedCount,\n  findAvailableSeed,\n  saveUserNFT\n} from '../services/nftService';\nimport '../styles/components.css';\n\nconst Create = () => {\n  // Spirograph state\n  const [seed, setSeed] = useState(null);\n  const [shape, setShape] = useState(null);\n  const [palette, setPalette] = useState(null);\n  const [image, setImage] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  \n  // NFT and wallet state\n  const [isMinting, setIsMinting] = useState(false);\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [hasToken, setHasToken] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [mintStatus, setMintStatus] = useState(null);\n  const [mintedCount, setMintedCount] = useState(0);\n  const [availabilityMessage, setAvailabilityMessage] = useState('');\n  const [isSeedAvailableState, setIsSeedAvailableState] = useState(true);\n\n  // Check NFT availability on load\n  useEffect(() => {\n    const fetchMintedCount = async () => {\n      try {\n        const count = await getMintedCount();\n        setMintedCount(count);\n      } catch (error) {\n        console.error(\"Error fetching minted count:\", error);\n        setMintedCount(0);\n      }\n    };\n\n    fetchMintedCount();\n    handleGenerateNew();\n  }, []);\n\n  // Check seed availability when it changes\n  useEffect(() => {\n    if (seed) {\n      const checkSeedAvailability = async () => {\n        try {\n          const available = await isSeedAvailable(seed);\n          setIsSeedAvailableState(available);\n          \n          if (!available) {\n            setAvailabilityMessage('This design has already been minted! Generate a new one.');\n          } else {\n            setAvailabilityMessage('');\n          }\n        } catch (error) {\n          console.error(\"Error checking seed availability:\", error);\n          setIsSeedAvailableState(true);\n          setAvailabilityMessage('');\n        }\n      };\n\n      checkSeedAvailability();\n    }\n  }, [seed]);\n\n  // Handle wallet connection\n  const handleWalletConnect = (address, tokenOwnership) => {\n    setWalletAddress(address);\n    setIsWalletConnected(!!address);\n    setHasToken(tokenOwnership);\n  };\n\n  // Handle shape change\n  const handleShapeChange = (shapeData) => {\n    setShape(shapeData);\n  };\n\n  // Handle palette change\n  const handlePaletteChange = (paletteData) => {\n    setPalette(paletteData);\n  };\n\n  // Handle drawing completion\n  const handleDrawingComplete = (finalImage) => {\n    setImage(finalImage);\n    setShowPreview(true);\n  };\n\n  // Generate a new random design\n  const handleGenerateNew = async () => {\n    // Clear previous state\n    setImage(null);\n    setShowPreview(false);\n    setMintStatus(null);\n    setAvailabilityMessage('');\n    \n    try {\n      // Find an available seed\n      const newSeed = await findAvailableSeed();\n      \n      if (newSeed) {\n        setSeed(newSeed);\n      } else {\n        setAvailabilityMessage('All 10,000 designs have been minted!');\n      }\n    } catch (error) {\n      console.error(\"Error finding available seed:\", error);\n      // Fallback to a random seed (1-10000) if there's an error\n      setSeed(Math.floor(Math.random() * 10000) + 1);\n    }\n  };\n\n  // Mint the current design as an NFT\n  const handleMint = async () => {\n    // Can't mint without wallet or token\n    if (!isWalletConnected) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n\n    if (!hasToken) {\n      alert(\"You need the special token to mint for free!\");\n      return;\n    }\n\n    // Ensure we have a completed drawing\n    if (!image) {\n      alert(\"Please wait for the drawing to complete before minting.\");\n      return;\n    }\n    \n    // Check availability once more before minting\n    try {\n      const available = await isSeedAvailable(seed);\n      if (!available) {\n        setAvailabilityMessage('This design has already been minted! Generate a new one.');\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error checking seed availability:\", error);\n    }\n\n    try {\n      setIsMinting(true);\n      setMintStatus(null);\n\n      // Reserve the seed\n      const reservationResult = await reserveSeed(seed);\n      \n      if (!reservationResult.success) {\n        throw new Error(reservationResult.message);\n      }\n      \n      // In a real implementation, this would upload to IPFS and mint an NFT\n      console.log(\"Minting with parameters:\", {\n        seed,\n        shape: shape?.type,\n        rarity: shape?.rarity,\n        palette: palette?.name,\n        animated: true\n      });\n\n      // Simulate minting process\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Success!\n      setMintStatus('success');\n      \n      // Update minted count\n      try {\n        const count = await getMintedCount();\n        setMintedCount(count);\n      } catch (error) {\n        console.error(\"Error fetching minted count:\", error);\n      }\n      \n      // Store in local storage for collection page\n      const imageUrl = image && image.canvas ? image.canvas.toDataURL('image/png') : null;\n      \n      await saveUserNFT({\n        id: seed,\n        params: {\n          shape: shape?.type,\n          rarity: shape?.rarity,\n          fixedRadius: shape?.params?.R,\n          movingRadius: shape?.params?.r1,\n          offset: shape?.params?.d,\n          colors: palette?.colors,\n          strokeWeight: 1\n        },\n        imageUrl: imageUrl,\n        animatedGifUrl: imageUrl,\n        mintDate: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      console.error(\"Error minting NFT:\", error);\n      setMintStatus('error');\n      setAvailabilityMessage(error.message || 'Error minting NFT');\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  // Download the current image\n  const handleDownloadImage = () => {\n    if (image && image.canvas) {\n      const link = document.createElement('a');\n      link.href = image.canvas.toDataURL('image/png');\n      link.download = `Spyro_${seed}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div className=\"create-page\">\n      <div className=\"create-header\">\n        <h1>Create Your Spyro NFT</h1>\n        <p>Design your unique mathematical pattern and mint it as an animated NFT</p>\n        <div className=\"nft-availability\">\n          <span className=\"minted-count\">{mintedCount}/10,000 Minted</span>\n          <WalletConnect onConnect={handleWalletConnect} />\n        </div>\n      </div>\n\n      <div className=\"create-container\">\n        <div className=\"canvas-side\">\n          {/* Spirograph Information */}\n          <div className=\"spiro-info\">\n            {seed && (\n              <div className=\"spiro-title\">\n                <h2>Spyro #{seed}</h2>\n                {shape && palette && (\n                  <div className=\"spiro-properties\">\n                    <span className=\"shape-badge\">\n                      <span className=\"prop-icon\">🌟</span> {shape.type} · {shape.rarity}\n                    </span>\n                    <span className=\"palette-badge\">\n                      <span className=\"prop-icon\">🎨</span> {palette.name} · {palette.rarity}\n                    </span>\n                  </div>\n                )}\n                {availabilityMessage && (\n                  <p className=\"availability-message\">{availabilityMessage}</p>\n                )}\n              </div>\n            )}\n          </div>\n        \n          {/* Canvas or Preview */}\n          <div className=\"canvas-container\">\n            {!showPreview ? (\n              <SpirographCanvas\n                seed={seed}\n                setSeed={setSeed}\n                onShapeChange={handleShapeChange}\n                onPaletteChange={handlePaletteChange}\n                onDrawingComplete={handleDrawingComplete}\n              />\n            ) : (\n              <div className=\"preview-container\">\n                <div className=\"animation-preview\">\n                  <div className=\"rotating-image\">\n                    {image && image.canvas && (\n                      <img \n                        src={image.canvas.toDataURL('image/png')} \n                        alt=\"Animated Spirograph\"\n                        className=\"preview-gif\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Action Buttons */}\n          <div className=\"canvas-actions\">\n            <button \n              className=\"action-button generate-button\"\n              onClick={handleGenerateNew}\n              disabled={isMinting}\n            >\n              Generate New Design\n            </button>\n            \n            {showPreview && (\n              <>\n                <button \n                  onClick={handleDownloadImage} \n                  className=\"action-button download-button\"\n                >\n                  Download Image\n                </button>\n                \n                <button \n                  onClick={handleMint}\n                  className=\"action-button mint-button\"\n                  disabled={isMinting || !isSeedAvailableState}\n                >\n                  {isMinting ? 'Minting...' : 'Mint as NFT'}\n                </button>\n              </>\n            )}\n          </div>\n          \n          {/* Success/Error Messages */}\n          {mintStatus === 'success' && (\n            <div className=\"mint-success\">\n              <h3>Success! 🎉</h3>\n              <p>Your Spyro NFT has been minted and sent to your wallet.</p>\n              <div className=\"share-buttons\">\n                <button className=\"share-twitter\">Share on X</button>\n                <button className=\"share-copy\">Copy Link</button>\n              </div>\n            </div>\n          )}\n          \n          {mintStatus === 'error' && (\n            <div className=\"mint-error\">\n              <h3>Error Minting</h3>\n              <p>There was a problem creating your NFT. Please try again.</p>\n              <button onClick={() => setMintStatus(null)} className=\"try-again-button\">Try Again</button>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"info-side\">\n          {/* Token Gate Info */}\n          <div className=\"token-gate-info\">\n            <h3>Token Gate</h3>\n            <p>This is a token-gated experience. You need to own our special token to mint NFTs for free.</p>\n            {!isWalletConnected && (\n              <p>Connect your wallet to check if you have the token.</p>\n            )}\n            {isWalletConnected && !hasToken && (\n              <div>\n                <p>You don't have the required token yet.</p>\n                <a href=\"https://opensea.io/collection/spyro-access-token\" \n                   target=\"_blank\" \n                   rel=\"noopener noreferrer\"\n                   className=\"get-token-button\">\n                  Get Token\n                </a>\n              </div>\n            )}\n            {isWalletConnected && hasToken && (\n              <p className=\"token-success\">You have the token! Mint as many NFTs as you want.</p>\n            )}\n          </div>\n          \n          {/* Rarity Info */}\n          <div className=\"rarity-info\">\n            <h3>Rarity Information</h3>\n            <div className=\"rarity-table\">\n              <div className=\"rarity-row\">\n                <span className=\"rarity-type common\">Common</span>\n                <span className=\"rarity-percent\">40%</span>\n              </div>\n              <div className=\"rarity-row\">\n                <span className=\"rarity-type uncommon\">Uncommon</span>\n                <span className=\"rarity-percent\">30%</span>\n              </div>\n              <div className=\"rarity-row\">\n                <span className=\"rarity-type rare\">Rare</span>\n                <span className=\"rarity-percent\">20%</span>\n              </div>\n              <div className=\"rarity-row\">\n                <span className=\"rarity-type super-rare\">Super Rare</span>\n                <span className=\"rarity-percent\">8%</span>\n              </div>\n              <div className=\"rarity-row\">\n                <span className=\"rarity-type legendary\">Legendary</span>\n                <span className=\"rarity-percent\">2%</span>\n              </div>\n            </div>\n            <p className=\"rarity-tip\">The rarer your Spyro, the higher the token rewards after 90 days!</p>\n          </div>\n          \n          {/* Shapes & Features */}\n          <div className=\"features-info\">\n            <h3>Shape Types</h3>\n            <ul className=\"features-list\">\n              <li><strong>Rhodonea:</strong> Rose-like curves with symmetric petals</li>\n              <li><strong>Epitrochoid:</strong> Curves traced by a point on a circle rolling around the outside of another circle</li>\n              <li><strong>Hypotrochoid:</strong> Curves traced by a point on a circle rolling inside another circle</li>\n              <li><strong>OrganicFlow:</strong> Dynamic patterns with natural, flowing variations</li>\n              <li><strong>Lissajous:</strong> Complex patterns created by two perpendicular oscillations</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}